
## al utilizar la URL de conexión JDBC para MySQL, Spring Boot debería ser capaz de identificar automáticamente el controlador JDBC correspondiente y usarlo para establecer la conexióN
spring.datasource.url=jdbc:mysql://localhost:3306/springsecurity?useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=Pepe@2023
## especificar cómo Hibernate debe actualizar el esquema de la base de datos en función de las entidades de JPA que se han definido en la aplicación.
spring.jpa.hibernate.ddl-auto=update 
## genérico: MySQLDialect(hibernate v5.4+) específico:MySQL8Dialect(but deprecated)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
## configurar el tamaño máximo del pool de conexiones de la base de datos. El valor por defecto es 10.
# spring.datasource.hikari.maximum-pool-size=2




##OTHER PROPERTIES

## especificar controlador JDBC diferente o personalizado que se utilizará para la conexión a la base de datos.
#V.8x y posterior // explicitado=>aunque por defecto lo obtendría de la URL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
 

# habilitar o deshabilitar la impresión de la sentencia SQL generada por JPA en la consola de registro.
spring.jpa.show-sql=true

## especificar el dialecto de la base de datos que estás utilizando, en este caso MySQL8. Esta clase es responsable de generar consultas SQL específicas para la base de datos MySQL8, lo que permite a Hibernate interactuar correctamente con la base de datos.
# spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
## otra forma:
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

## permite que la sesión de Hibernate se mantenga abierta durante toda la duración de una solicitud web.
spring.jpa.open-in-view=true
